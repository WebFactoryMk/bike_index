- serial_help_content = "#{t('bikes.every-bike-has')} #{link_to "#{t('bikes.our-serial-page')}", serials_url, target: '_blank' } <small>(#{t('bikes.opens-new')})</small>."

.form-well-header.container
  %h1
    Enter #{@bike.type} details
= form_for @bike, multipart: true do |f|
  = f.hidden_field :b_param_id_token
  - if @bike.creation_organization_id.present?
    = f.hidden_field :creation_organization_id
  - if @bike.stolen?
    = f.hidden_field :stolen, value: true
    = hidden_field_tag :stolen, value: true
  
  - if @bike.recovered
    = f.hidden_field :recovered, value: true
  .form-well-container.container
    .row
      .col-lg-8.offset-lg-2.form-well
        .form-wrap
          .form-group.row.unnested-field
            = f.label :cycle_type_id, "#{t('bikes.this-is')}", class: 'form-well-label'
            .form-well-input.fancy-select.unfancy
              = f.collection_select(:cycle_type_id, CycleType.all, :id, :name, required: true, class: 'form-control')

          .form-group.row.unnested-field
            = f.label :serial_number, class: 'form-well-label'
            .form-well-input
              #serial-input
                = f.text_field :serial_number, required: true, autocomplete: 'off', autocorrect: 'off', autocapitalize: 'off', placeholder: 'highly recommended', class: 'form-control'
                %a.inline-input-help{ title: "#{t('bikes.serial-help')}", data: { toggle: 'popover', content: serial_help_content } }
                  ?
              #made-without-serial-input
                %label
                  = f.check_box :made_without_serial
                  #{t('bikes.Made-without-serial')}
              .below-input-help#made-without-serial-help
                .hidden-other
                  %a{ data: { toggle: 'modal', target: '#made-without-serial-modal' } }
                    #{t('common.This')} #{@bike.type} #{t('bikes.made-without')}
            .right-input-help
              %label
                = f.check_box :has_no_serial, tabindex: -1
                #{t('bikes.missing-serial')}

          .related-fields
            .form-group.row
              = f.label :manufacturer_id, class: 'form-well-label'
              .form-well-input
                - initial = @bike.manufacturer && { id: @bike.manufacturer.id, text: @bike.manufacturer.name }.to_json
                = f.text_field :manufacturer_id, value: @bike.manufacturer && @bike.manufacturer.name, class: 'form-control unfancy', data: { initial: initial }
                %span.below-input-help
                  #{t('bikes.select-other')}
            .form-group.hidden-other.row
              = f.label :manufacturer_other, "#{t('organization.other-manu')}", class: 'form-well-label'
              .form-well-input
                = f.text_field :manufacturer_other, class: 'form-control'

          .form-group.row.fancy-select.unfancy.unnested-field
            = f.label :year, 'Model year', class: 'form-well-label'
            .form-well-input
              - years = (1900..Time.now.year+1).to_a.reverse.map { |i| [i,i] }
              = f.select :year, years, prompt: "#{t('organization.unsure-unknown')}", selected: @bike.year || Time.now.year
            .right-input-help
              %label
                %input#bike_unknown_year{ type: 'checkbox', tabindex: -1 }
                #{t('organization.unknown-year')}

          .form-group.row.unnested-field
            = f.label :frame_model, class: 'form-well-label'
            .form-well-input
              = f.text_field :frame_model, class: 'form-control'
          
          - classname = (@b_param.display_email? ? '' : 'no-divider-row')
          = render partial: '/bikes/bike_fields/revised_colors', locals: { f: f, classname: classname }

          - if @bike.stolen
            .form-group.row.unnested-field
              = f.label :phone, class: 'form-well-label'
              .form-well-input
                = f.text_field :phone, required: true, value: current_user.phone, class: 'form-control'

            = fields_for @stolen_record do |srecord|
              = render partial: '/bikes/bike_fields/stolen_location', locals: { srecord: srecord }
          / Commenting out for now, more trouble than it's worth
          / # - if @b_param.display_email?
          .form-group.row.unnested-field.no-divider-row
            = f.label :owner_email, class: 'form-well-label'
            .form-well-input
              - email = @bike.owner_email || current_user && current_user.email
              = f.email_field :owner_email, value: email, required: true, placeholder: 'required', class: 'form-control'
      .new-bike-submit-wrapper
        = submit_tag "#{t('common.Register')}", class: 'btn btn-lg btn-primary'

- modal_body = capture_haml do
  .modal-body
    %p
      #{t('common.Very')}
      %em
        #{t('common.very')}
      #{t('bikes.few-bikes')} #{@bike.type}:
    %ul
      %li
        #{t('bikes.made-before')}
      %li.li-or
        \- #{t('common.or')} -
      %li
        #{t('bikes.handmade-frame')}
    %p
      #{t('bikes.probably-has')}
    %p 
      #{t('bikes.read-about')} #{link_to "#{t('bikes.how-to-find')}", serials_url, target: '_blank' }
      %small
        (#{t('bikes.opens-new')})
  .modal-btn-footer
    .row
      .col-xs-6
        %button.btn.btn-secondary{'data-dismiss' => 'modal', type: 'button'}
          #{t('common.Nevermind')}
        #{t('bikes.dont-know-serial')}
      .col-xs-6
        %button.btn.btn-danger#made-without-serial-button{type: 'button'}
          #{t('bikes.im-sure')}
        #{t('common.This')} #{@bike.type} #{t('bikes.made-without')}

= render partial: '/shared/modal', locals: { title: "#{t('bikes.are-you-certain')}", id: 'made-without-serial-modal', modal_body: modal_body }